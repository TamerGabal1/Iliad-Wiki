{"ast":null,"code":"var _jsxFileName = \"/Users/tamergabal/Desktop/Projects/Iliad-Wiki/src/components/EventPage.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EventPage = ({\n  events\n}) => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const event = events.find(evt => evt.id === id);\n  if (!event) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Event not found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"event-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: event.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Book:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 10\n      }, this), \" \", event.book]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Details:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 10\n      }, this), \" \", event.details]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_s(EventPage, \"yQgCIz/jJfqV1l9s2yoba81MT5A=\", false, function () {\n  return [useParams];\n});\n_c = EventPage;\nexport default EventPage;\nvar _c;\n$RefreshReg$(_c, \"EventPage\");","map":{"version":3,"names":["React","useParams","jsxDEV","_jsxDEV","EventPage","events","_s","id","event","find","evt","children","fileName","_jsxFileName","lineNumber","columnNumber","className","name","book","details","_c","$RefreshReg$"],"sources":["/Users/tamergabal/Desktop/Projects/Iliad-Wiki/src/components/EventPage.tsx"],"sourcesContent":["import React from 'react';\nimport { useParams } from 'react-router-dom';\n\ninterface Event {\n  id: string;\n  name: string;\n  book: string;\n  details: string;\n}\n\ninterface EventPageProps {\n  events: Event[];\n}\n\nconst EventPage: React.FC<EventPageProps> = ({ events }) => {\n  const { id } = useParams<{ id: string }>();\n  const event = events.find((evt) => evt.id === id);\n\n  if (!event) {\n    return <div>Event not found</div>;\n  }\n\n  return (\n    <div className=\"event-page\">\n      <h2>{event.name}</h2>\n      <p><strong>Book:</strong> {event.book}</p>\n      <p><strong>Details:</strong> {event.details}</p>\n    </div>\n  );\n};\n\nexport default EventPage;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAa7C,MAAMC,SAAmC,GAAGA,CAAC;EAAEC;AAAO,CAAC,KAAK;EAAAC,EAAA;EAC1D,MAAM;IAAEC;EAAG,CAAC,GAAGN,SAAS,CAAiB,CAAC;EAC1C,MAAMO,KAAK,GAAGH,MAAM,CAACI,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACH,EAAE,KAAKA,EAAE,CAAC;EAEjD,IAAI,CAACC,KAAK,EAAE;IACV,oBAAOL,OAAA;MAAAQ,QAAA,EAAK;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EACnC;EAEA,oBACEZ,OAAA;IAAKa,SAAS,EAAC,YAAY;IAAAL,QAAA,gBACzBR,OAAA;MAAAQ,QAAA,EAAKH,KAAK,CAACS;IAAI;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACrBZ,OAAA;MAAAQ,QAAA,gBAAGR,OAAA;QAAAQ,QAAA,EAAQ;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,KAAC,EAACP,KAAK,CAACU,IAAI;IAAA;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC1CZ,OAAA;MAAAQ,QAAA,gBAAGR,OAAA;QAAAQ,QAAA,EAAQ;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,KAAC,EAACP,KAAK,CAACW,OAAO;IAAA;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC7C,CAAC;AAEV,CAAC;AAACT,EAAA,CAfIF,SAAmC;EAAA,QACxBH,SAAS;AAAA;AAAAmB,EAAA,GADpBhB,SAAmC;AAiBzC,eAAeA,SAAS;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}